// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  username String @unique
  email String  @unique
  password String
  bio String?
  posts Post[]
  likes Like[]
  comments Comment[]
  follows Follow[] @relation("follower")
  followers Follow[] @relation("following")
  notifications Notification[] @relation("notificationReceiver")
  notificationsSent Notification[] @relation("notificationActor")
  created DateTime @default(now())
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String?
  content   String
  user    User    @relation(fields: [userId], references: [id])
  userId  Int
  likes Like[]
  comments Comment[]
  notifications Notification[]
  created DateTime @default(now())
}

model Like {
  id      Int     @id @default(autoincrement())
  user    User    @relation( fields: [userId], references: [id])
  userId  Int
  post    Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  Int
}

model Comment {
  id      Int     @id @default(autoincrement())
  user    User    @relation(fields: [userId], references: [id])
  userId  Int
  post    Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  Int
  content String
  created DateTime @default(now())
}

model Follow {
  id Int @id @default(autoincrement())
  follower  User  @relation("follower", fields:[followerId], references: [id])
  followerId  Int
  following  User  @relation("following", fields:[followingId], references: [id])
  followingId  Int
  created DateTime @default(now())
  @@unique([followerId, followingId])
}

model Notification {
  id Int @id @default(autoincrement())
  type String
  read Boolean @default(false)
  user User @relation("notificationReceiver", fields: [userId], references: [id])
  userId Int
  actor User @relation("notificationActor", fields: [actorId], references: [id])
  actorId Int
  post Post? @relation(fields: [postId], references: [id])
  postId Int?
  created DateTime @default(now())
}